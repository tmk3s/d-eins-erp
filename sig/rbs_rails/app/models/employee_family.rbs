class EmployeeFamily < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[EmployeeFamily, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def company_id: () -> Integer

    def company_id=: (Integer) -> Integer

    def company_id?: () -> bool

    def company_id_changed?: () -> bool

    def company_id_change: () -> [ Integer?, Integer? ]

    def company_id_will_change!: () -> void

    def company_id_was: () -> Integer?

    def company_id_previously_changed?: () -> bool

    def company_id_previous_change: () -> Array[Integer?]?

    def company_id_previously_was: () -> Integer?

    def company_id_before_last_save: () -> Integer?

    def company_id_change_to_be_saved: () -> Array[Integer?]?

    def company_id_in_database: () -> Integer?

    def saved_change_to_company_id: () -> Array[Integer?]?

    def saved_change_to_company_id?: () -> bool

    def will_save_change_to_company_id?: () -> bool

    def restore_company_id!: () -> void

    def clear_company_id_change: () -> void

    def employee_id: () -> Integer

    def employee_id=: (Integer) -> Integer

    def employee_id?: () -> bool

    def employee_id_changed?: () -> bool

    def employee_id_change: () -> [ Integer?, Integer? ]

    def employee_id_will_change!: () -> void

    def employee_id_was: () -> Integer?

    def employee_id_previously_changed?: () -> bool

    def employee_id_previous_change: () -> Array[Integer?]?

    def employee_id_previously_was: () -> Integer?

    def employee_id_before_last_save: () -> Integer?

    def employee_id_change_to_be_saved: () -> Array[Integer?]?

    def employee_id_in_database: () -> Integer?

    def saved_change_to_employee_id: () -> Array[Integer?]?

    def saved_change_to_employee_id?: () -> bool

    def will_save_change_to_employee_id?: () -> bool

    def restore_employee_id!: () -> void

    def clear_employee_id_change: () -> void

    def row_no: () -> Integer

    def row_no=: (Integer) -> Integer

    def row_no?: () -> bool

    def row_no_changed?: () -> bool

    def row_no_change: () -> [ Integer?, Integer? ]

    def row_no_will_change!: () -> void

    def row_no_was: () -> Integer?

    def row_no_previously_changed?: () -> bool

    def row_no_previous_change: () -> Array[Integer?]?

    def row_no_previously_was: () -> Integer?

    def row_no_before_last_save: () -> Integer?

    def row_no_change_to_be_saved: () -> Array[Integer?]?

    def row_no_in_database: () -> Integer?

    def saved_change_to_row_no: () -> Array[Integer?]?

    def saved_change_to_row_no?: () -> bool

    def will_save_change_to_row_no?: () -> bool

    def restore_row_no!: () -> void

    def clear_row_no_change: () -> void

    def relationship: () -> Integer

    def relationship=: (Integer) -> Integer

    def relationship?: () -> bool

    def relationship_changed?: () -> bool

    def relationship_change: () -> [ Integer?, Integer? ]

    def relationship_will_change!: () -> void

    def relationship_was: () -> Integer?

    def relationship_previously_changed?: () -> bool

    def relationship_previous_change: () -> Array[Integer?]?

    def relationship_previously_was: () -> Integer?

    def relationship_before_last_save: () -> Integer?

    def relationship_change_to_be_saved: () -> Array[Integer?]?

    def relationship_in_database: () -> Integer?

    def saved_change_to_relationship: () -> Array[Integer?]?

    def saved_change_to_relationship?: () -> bool

    def will_save_change_to_relationship?: () -> bool

    def restore_relationship!: () -> void

    def clear_relationship_change: () -> void

    def last_name: () -> String

    def last_name=: (String) -> String

    def last_name?: () -> bool

    def last_name_changed?: () -> bool

    def last_name_change: () -> [ String?, String? ]

    def last_name_will_change!: () -> void

    def last_name_was: () -> String?

    def last_name_previously_changed?: () -> bool

    def last_name_previous_change: () -> Array[String?]?

    def last_name_previously_was: () -> String?

    def last_name_before_last_save: () -> String?

    def last_name_change_to_be_saved: () -> Array[String?]?

    def last_name_in_database: () -> String?

    def saved_change_to_last_name: () -> Array[String?]?

    def saved_change_to_last_name?: () -> bool

    def will_save_change_to_last_name?: () -> bool

    def restore_last_name!: () -> void

    def clear_last_name_change: () -> void

    def first_name: () -> String

    def first_name=: (String) -> String

    def first_name?: () -> bool

    def first_name_changed?: () -> bool

    def first_name_change: () -> [ String?, String? ]

    def first_name_will_change!: () -> void

    def first_name_was: () -> String?

    def first_name_previously_changed?: () -> bool

    def first_name_previous_change: () -> Array[String?]?

    def first_name_previously_was: () -> String?

    def first_name_before_last_save: () -> String?

    def first_name_change_to_be_saved: () -> Array[String?]?

    def first_name_in_database: () -> String?

    def saved_change_to_first_name: () -> Array[String?]?

    def saved_change_to_first_name?: () -> bool

    def will_save_change_to_first_name?: () -> bool

    def restore_first_name!: () -> void

    def clear_first_name_change: () -> void

    def last_name_kana: () -> String?

    def last_name_kana=: (String?) -> String?

    def last_name_kana?: () -> bool

    def last_name_kana_changed?: () -> bool

    def last_name_kana_change: () -> [ String?, String? ]

    def last_name_kana_will_change!: () -> void

    def last_name_kana_was: () -> String?

    def last_name_kana_previously_changed?: () -> bool

    def last_name_kana_previous_change: () -> Array[String?]?

    def last_name_kana_previously_was: () -> String?

    def last_name_kana_before_last_save: () -> String?

    def last_name_kana_change_to_be_saved: () -> Array[String?]?

    def last_name_kana_in_database: () -> String?

    def saved_change_to_last_name_kana: () -> Array[String?]?

    def saved_change_to_last_name_kana?: () -> bool

    def will_save_change_to_last_name_kana?: () -> bool

    def restore_last_name_kana!: () -> void

    def clear_last_name_kana_change: () -> void

    def first_name_kana: () -> String?

    def first_name_kana=: (String?) -> String?

    def first_name_kana?: () -> bool

    def first_name_kana_changed?: () -> bool

    def first_name_kana_change: () -> [ String?, String? ]

    def first_name_kana_will_change!: () -> void

    def first_name_kana_was: () -> String?

    def first_name_kana_previously_changed?: () -> bool

    def first_name_kana_previous_change: () -> Array[String?]?

    def first_name_kana_previously_was: () -> String?

    def first_name_kana_before_last_save: () -> String?

    def first_name_kana_change_to_be_saved: () -> Array[String?]?

    def first_name_kana_in_database: () -> String?

    def saved_change_to_first_name_kana: () -> Array[String?]?

    def saved_change_to_first_name_kana?: () -> bool

    def will_save_change_to_first_name_kana?: () -> bool

    def restore_first_name_kana!: () -> void

    def clear_first_name_kana_change: () -> void

    def gender: () -> Integer?

    def gender=: (Integer?) -> Integer?

    def gender?: () -> bool

    def gender_changed?: () -> bool

    def gender_change: () -> [ Integer?, Integer? ]

    def gender_will_change!: () -> void

    def gender_was: () -> Integer?

    def gender_previously_changed?: () -> bool

    def gender_previous_change: () -> Array[Integer?]?

    def gender_previously_was: () -> Integer?

    def gender_before_last_save: () -> Integer?

    def gender_change_to_be_saved: () -> Array[Integer?]?

    def gender_in_database: () -> Integer?

    def saved_change_to_gender: () -> Array[Integer?]?

    def saved_change_to_gender?: () -> bool

    def will_save_change_to_gender?: () -> bool

    def restore_gender!: () -> void

    def clear_gender_change: () -> void

    def birthday: () -> Date?

    def birthday=: (Date?) -> Date?

    def birthday?: () -> bool

    def birthday_changed?: () -> bool

    def birthday_change: () -> [ Date?, Date? ]

    def birthday_will_change!: () -> void

    def birthday_was: () -> Date?

    def birthday_previously_changed?: () -> bool

    def birthday_previous_change: () -> Array[Date?]?

    def birthday_previously_was: () -> Date?

    def birthday_before_last_save: () -> Date?

    def birthday_change_to_be_saved: () -> Array[Date?]?

    def birthday_in_database: () -> Date?

    def saved_change_to_birthday: () -> Array[Date?]?

    def saved_change_to_birthday?: () -> bool

    def will_save_change_to_birthday?: () -> bool

    def restore_birthday!: () -> void

    def clear_birthday_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def company: () -> Company
  def company=: (Company?) -> Company?
  def reload_company: () -> Company?
  def build_company: (untyped) -> Company
  def create_company: (untyped) -> Company
  def create_company!: (untyped) -> Company
  def employee: () -> Employee
  def employee=: (Employee?) -> Employee?
  def reload_employee: () -> Employee?
  def build_employee: (untyped) -> Employee
  def create_employee: (untyped) -> Employee
  def create_employee!: (untyped) -> Employee
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmployeeFamily, Integer]
    include Enumerable[EmployeeFamily]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmployeeFamily, Integer]
  end
end
