class EmployeeSalary < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[EmployeeSalary, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def company_id: () -> Integer

    def company_id=: (Integer) -> Integer

    def company_id?: () -> bool

    def company_id_changed?: () -> bool

    def company_id_change: () -> [ Integer?, Integer? ]

    def company_id_will_change!: () -> void

    def company_id_was: () -> Integer?

    def company_id_previously_changed?: () -> bool

    def company_id_previous_change: () -> Array[Integer?]?

    def company_id_previously_was: () -> Integer?

    def company_id_before_last_save: () -> Integer?

    def company_id_change_to_be_saved: () -> Array[Integer?]?

    def company_id_in_database: () -> Integer?

    def saved_change_to_company_id: () -> Array[Integer?]?

    def saved_change_to_company_id?: () -> bool

    def will_save_change_to_company_id?: () -> bool

    def restore_company_id!: () -> void

    def clear_company_id_change: () -> void

    def employee_id: () -> Integer

    def employee_id=: (Integer) -> Integer

    def employee_id?: () -> bool

    def employee_id_changed?: () -> bool

    def employee_id_change: () -> [ Integer?, Integer? ]

    def employee_id_will_change!: () -> void

    def employee_id_was: () -> Integer?

    def employee_id_previously_changed?: () -> bool

    def employee_id_previous_change: () -> Array[Integer?]?

    def employee_id_previously_was: () -> Integer?

    def employee_id_before_last_save: () -> Integer?

    def employee_id_change_to_be_saved: () -> Array[Integer?]?

    def employee_id_in_database: () -> Integer?

    def saved_change_to_employee_id: () -> Array[Integer?]?

    def saved_change_to_employee_id?: () -> bool

    def will_save_change_to_employee_id?: () -> bool

    def restore_employee_id!: () -> void

    def clear_employee_id_change: () -> void

    def payroll_group_id: () -> Integer

    def payroll_group_id=: (Integer) -> Integer

    def payroll_group_id?: () -> bool

    def payroll_group_id_changed?: () -> bool

    def payroll_group_id_change: () -> [ Integer?, Integer? ]

    def payroll_group_id_will_change!: () -> void

    def payroll_group_id_was: () -> Integer?

    def payroll_group_id_previously_changed?: () -> bool

    def payroll_group_id_previous_change: () -> Array[Integer?]?

    def payroll_group_id_previously_was: () -> Integer?

    def payroll_group_id_before_last_save: () -> Integer?

    def payroll_group_id_change_to_be_saved: () -> Array[Integer?]?

    def payroll_group_id_in_database: () -> Integer?

    def saved_change_to_payroll_group_id: () -> Array[Integer?]?

    def saved_change_to_payroll_group_id?: () -> bool

    def will_save_change_to_payroll_group_id?: () -> bool

    def restore_payroll_group_id!: () -> void

    def clear_payroll_group_id_change: () -> void

    def payment_date: () -> Date

    def payment_date=: (Date) -> Date

    def payment_date?: () -> bool

    def payment_date_changed?: () -> bool

    def payment_date_change: () -> [ Date?, Date? ]

    def payment_date_will_change!: () -> void

    def payment_date_was: () -> Date?

    def payment_date_previously_changed?: () -> bool

    def payment_date_previous_change: () -> Array[Date?]?

    def payment_date_previously_was: () -> Date?

    def payment_date_before_last_save: () -> Date?

    def payment_date_change_to_be_saved: () -> Array[Date?]?

    def payment_date_in_database: () -> Date?

    def saved_change_to_payment_date: () -> Array[Date?]?

    def saved_change_to_payment_date?: () -> bool

    def will_save_change_to_payment_date?: () -> bool

    def restore_payment_date!: () -> void

    def clear_payment_date_change: () -> void

    def total_payment: () -> Integer

    def total_payment=: (Integer) -> Integer

    def total_payment?: () -> bool

    def total_payment_changed?: () -> bool

    def total_payment_change: () -> [ Integer?, Integer? ]

    def total_payment_will_change!: () -> void

    def total_payment_was: () -> Integer?

    def total_payment_previously_changed?: () -> bool

    def total_payment_previous_change: () -> Array[Integer?]?

    def total_payment_previously_was: () -> Integer?

    def total_payment_before_last_save: () -> Integer?

    def total_payment_change_to_be_saved: () -> Array[Integer?]?

    def total_payment_in_database: () -> Integer?

    def saved_change_to_total_payment: () -> Array[Integer?]?

    def saved_change_to_total_payment?: () -> bool

    def will_save_change_to_total_payment?: () -> bool

    def restore_total_payment!: () -> void

    def clear_total_payment_change: () -> void

    def total_deduction: () -> Integer

    def total_deduction=: (Integer) -> Integer

    def total_deduction?: () -> bool

    def total_deduction_changed?: () -> bool

    def total_deduction_change: () -> [ Integer?, Integer? ]

    def total_deduction_will_change!: () -> void

    def total_deduction_was: () -> Integer?

    def total_deduction_previously_changed?: () -> bool

    def total_deduction_previous_change: () -> Array[Integer?]?

    def total_deduction_previously_was: () -> Integer?

    def total_deduction_before_last_save: () -> Integer?

    def total_deduction_change_to_be_saved: () -> Array[Integer?]?

    def total_deduction_in_database: () -> Integer?

    def saved_change_to_total_deduction: () -> Array[Integer?]?

    def saved_change_to_total_deduction?: () -> bool

    def will_save_change_to_total_deduction?: () -> bool

    def restore_total_deduction!: () -> void

    def clear_total_deduction_change: () -> void

    def deductible_payment_amount: () -> Integer

    def deductible_payment_amount=: (Integer) -> Integer

    def deductible_payment_amount?: () -> bool

    def deductible_payment_amount_changed?: () -> bool

    def deductible_payment_amount_change: () -> [ Integer?, Integer? ]

    def deductible_payment_amount_will_change!: () -> void

    def deductible_payment_amount_was: () -> Integer?

    def deductible_payment_amount_previously_changed?: () -> bool

    def deductible_payment_amount_previous_change: () -> Array[Integer?]?

    def deductible_payment_amount_previously_was: () -> Integer?

    def deductible_payment_amount_before_last_save: () -> Integer?

    def deductible_payment_amount_change_to_be_saved: () -> Array[Integer?]?

    def deductible_payment_amount_in_database: () -> Integer?

    def saved_change_to_deductible_payment_amount: () -> Array[Integer?]?

    def saved_change_to_deductible_payment_amount?: () -> bool

    def will_save_change_to_deductible_payment_amount?: () -> bool

    def restore_deductible_payment_amount!: () -> void

    def clear_deductible_payment_amount_change: () -> void

    def is_confirm: () -> bool

    def is_confirm=: (bool) -> bool

    def is_confirm?: () -> bool

    def is_confirm_changed?: () -> bool

    def is_confirm_change: () -> [ bool?, bool? ]

    def is_confirm_will_change!: () -> void

    def is_confirm_was: () -> bool?

    def is_confirm_previously_changed?: () -> bool

    def is_confirm_previous_change: () -> Array[bool?]?

    def is_confirm_previously_was: () -> bool?

    def is_confirm_before_last_save: () -> bool?

    def is_confirm_change_to_be_saved: () -> Array[bool?]?

    def is_confirm_in_database: () -> bool?

    def saved_change_to_is_confirm: () -> Array[bool?]?

    def saved_change_to_is_confirm?: () -> bool

    def will_save_change_to_is_confirm?: () -> bool

    def restore_is_confirm!: () -> void

    def clear_is_confirm_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def employee_salary_attendance_items: () -> EmployeeSalaryAttendanceItem::ActiveRecord_Associations_CollectionProxy
  def employee_salary_attendance_items=: (EmployeeSalaryAttendanceItem::ActiveRecord_Associations_CollectionProxy | Array[EmployeeSalaryAttendanceItem]) -> (EmployeeSalaryAttendanceItem::ActiveRecord_Associations_CollectionProxy | Array[EmployeeSalaryAttendanceItem])
  def employee_salary_attendance_item_ids: () -> Array[Integer]
  def employee_salary_attendance_item_ids=: (Array[Integer]) -> Array[Integer]
  def employee_salary_deduction_items: () -> EmployeeSalaryDeductionItem::ActiveRecord_Associations_CollectionProxy
  def employee_salary_deduction_items=: (EmployeeSalaryDeductionItem::ActiveRecord_Associations_CollectionProxy | Array[EmployeeSalaryDeductionItem]) -> (EmployeeSalaryDeductionItem::ActiveRecord_Associations_CollectionProxy | Array[EmployeeSalaryDeductionItem])
  def employee_salary_deduction_item_ids: () -> Array[Integer]
  def employee_salary_deduction_item_ids=: (Array[Integer]) -> Array[Integer]
  def employee_salary_payment_items: () -> EmployeeSalaryPaymentItem::ActiveRecord_Associations_CollectionProxy
  def employee_salary_payment_items=: (EmployeeSalaryPaymentItem::ActiveRecord_Associations_CollectionProxy | Array[EmployeeSalaryPaymentItem]) -> (EmployeeSalaryPaymentItem::ActiveRecord_Associations_CollectionProxy | Array[EmployeeSalaryPaymentItem])
  def employee_salary_payment_item_ids: () -> Array[Integer]
  def employee_salary_payment_item_ids=: (Array[Integer]) -> Array[Integer]

  def company: () -> Company
  def company=: (Company?) -> Company?
  def reload_company: () -> Company?
  def build_company: (untyped) -> Company
  def create_company: (untyped) -> Company
  def create_company!: (untyped) -> Company
  def employee: () -> Employee
  def employee=: (Employee?) -> Employee?
  def reload_employee: () -> Employee?
  def build_employee: (untyped) -> Employee
  def create_employee: (untyped) -> Employee
  def create_employee!: (untyped) -> Employee
  def payroll_group: () -> PayrollGroup
  def payroll_group=: (PayrollGroup?) -> PayrollGroup?
  def reload_payroll_group: () -> PayrollGroup?
  def build_payroll_group: (untyped) -> PayrollGroup
  def create_payroll_group: (untyped) -> PayrollGroup
  def create_payroll_group!: (untyped) -> PayrollGroup
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmployeeSalary, Integer]
    include Enumerable[EmployeeSalary]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmployeeSalary, Integer]
  end
end
