class AssociationKenpoRate < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[AssociationKenpoRate, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def start_on: () -> Date

    def start_on=: (Date) -> Date

    def start_on?: () -> bool

    def start_on_changed?: () -> bool

    def start_on_change: () -> [ Date?, Date? ]

    def start_on_will_change!: () -> void

    def start_on_was: () -> Date?

    def start_on_previously_changed?: () -> bool

    def start_on_previous_change: () -> Array[Date?]?

    def start_on_previously_was: () -> Date?

    def start_on_before_last_save: () -> Date?

    def start_on_change_to_be_saved: () -> Array[Date?]?

    def start_on_in_database: () -> Date?

    def saved_change_to_start_on: () -> Array[Date?]?

    def saved_change_to_start_on?: () -> bool

    def will_save_change_to_start_on?: () -> bool

    def restore_start_on!: () -> void

    def clear_start_on_change: () -> void

    def prefecture_id: () -> Integer

    def prefecture_id=: (Integer) -> Integer

    def prefecture_id?: () -> bool

    def prefecture_id_changed?: () -> bool

    def prefecture_id_change: () -> [ Integer?, Integer? ]

    def prefecture_id_will_change!: () -> void

    def prefecture_id_was: () -> Integer?

    def prefecture_id_previously_changed?: () -> bool

    def prefecture_id_previous_change: () -> Array[Integer?]?

    def prefecture_id_previously_was: () -> Integer?

    def prefecture_id_before_last_save: () -> Integer?

    def prefecture_id_change_to_be_saved: () -> Array[Integer?]?

    def prefecture_id_in_database: () -> Integer?

    def saved_change_to_prefecture_id: () -> Array[Integer?]?

    def saved_change_to_prefecture_id?: () -> bool

    def will_save_change_to_prefecture_id?: () -> bool

    def restore_prefecture_id!: () -> void

    def clear_prefecture_id_change: () -> void

    def insurance_type: () -> Integer

    def insurance_type=: (Integer) -> Integer

    def insurance_type?: () -> bool

    def insurance_type_changed?: () -> bool

    def insurance_type_change: () -> [ Integer?, Integer? ]

    def insurance_type_will_change!: () -> void

    def insurance_type_was: () -> Integer?

    def insurance_type_previously_changed?: () -> bool

    def insurance_type_previous_change: () -> Array[Integer?]?

    def insurance_type_previously_was: () -> Integer?

    def insurance_type_before_last_save: () -> Integer?

    def insurance_type_change_to_be_saved: () -> Array[Integer?]?

    def insurance_type_in_database: () -> Integer?

    def saved_change_to_insurance_type: () -> Array[Integer?]?

    def saved_change_to_insurance_type?: () -> bool

    def will_save_change_to_insurance_type?: () -> bool

    def restore_insurance_type!: () -> void

    def clear_insurance_type_change: () -> void

    def employee_rate: () -> BigDecimal

    def employee_rate=: (BigDecimal) -> BigDecimal

    def employee_rate?: () -> bool

    def employee_rate_changed?: () -> bool

    def employee_rate_change: () -> [ BigDecimal?, BigDecimal? ]

    def employee_rate_will_change!: () -> void

    def employee_rate_was: () -> BigDecimal?

    def employee_rate_previously_changed?: () -> bool

    def employee_rate_previous_change: () -> Array[BigDecimal?]?

    def employee_rate_previously_was: () -> BigDecimal?

    def employee_rate_before_last_save: () -> BigDecimal?

    def employee_rate_change_to_be_saved: () -> Array[BigDecimal?]?

    def employee_rate_in_database: () -> BigDecimal?

    def saved_change_to_employee_rate: () -> Array[BigDecimal?]?

    def saved_change_to_employee_rate?: () -> bool

    def will_save_change_to_employee_rate?: () -> bool

    def restore_employee_rate!: () -> void

    def clear_employee_rate_change: () -> void

    def employer_rate: () -> BigDecimal

    def employer_rate=: (BigDecimal) -> BigDecimal

    def employer_rate?: () -> bool

    def employer_rate_changed?: () -> bool

    def employer_rate_change: () -> [ BigDecimal?, BigDecimal? ]

    def employer_rate_will_change!: () -> void

    def employer_rate_was: () -> BigDecimal?

    def employer_rate_previously_changed?: () -> bool

    def employer_rate_previous_change: () -> Array[BigDecimal?]?

    def employer_rate_previously_was: () -> BigDecimal?

    def employer_rate_before_last_save: () -> BigDecimal?

    def employer_rate_change_to_be_saved: () -> Array[BigDecimal?]?

    def employer_rate_in_database: () -> BigDecimal?

    def saved_change_to_employer_rate: () -> Array[BigDecimal?]?

    def saved_change_to_employer_rate?: () -> bool

    def will_save_change_to_employer_rate?: () -> bool

    def restore_employer_rate!: () -> void

    def clear_employer_rate_change: () -> void

    def rate: () -> BigDecimal

    def rate=: (BigDecimal) -> BigDecimal

    def rate?: () -> bool

    def rate_changed?: () -> bool

    def rate_change: () -> [ BigDecimal?, BigDecimal? ]

    def rate_will_change!: () -> void

    def rate_was: () -> BigDecimal?

    def rate_previously_changed?: () -> bool

    def rate_previous_change: () -> Array[BigDecimal?]?

    def rate_previously_was: () -> BigDecimal?

    def rate_before_last_save: () -> BigDecimal?

    def rate_change_to_be_saved: () -> Array[BigDecimal?]?

    def rate_in_database: () -> BigDecimal?

    def saved_change_to_rate: () -> Array[BigDecimal?]?

    def saved_change_to_rate?: () -> bool

    def will_save_change_to_rate?: () -> bool

    def restore_rate!: () -> void

    def clear_rate_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[AssociationKenpoRate, Integer]
    include Enumerable[AssociationKenpoRate]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[AssociationKenpoRate, Integer]
  end
end
