class User < ::ActiveRecord::Base
  extend _ActiveRecord_Relation_ClassMethods[User, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def company_id: () -> Integer

    def company_id=: (Integer) -> Integer

    def company_id?: () -> bool

    def company_id_changed?: () -> bool

    def company_id_change: () -> [ Integer?, Integer? ]

    def company_id_will_change!: () -> void

    def company_id_was: () -> Integer?

    def company_id_previously_changed?: () -> bool

    def company_id_previous_change: () -> Array[Integer?]?

    def company_id_previously_was: () -> Integer?

    def company_id_before_last_save: () -> Integer?

    def company_id_change_to_be_saved: () -> Array[Integer?]?

    def company_id_in_database: () -> Integer?

    def saved_change_to_company_id: () -> Array[Integer?]?

    def saved_change_to_company_id?: () -> bool

    def will_save_change_to_company_id?: () -> bool

    def restore_company_id!: () -> void

    def clear_company_id_change: () -> void

    def provider: () -> String

    def provider=: (String) -> String

    def provider?: () -> bool

    def provider_changed?: () -> bool

    def provider_change: () -> [ String?, String? ]

    def provider_will_change!: () -> void

    def provider_was: () -> String?

    def provider_previously_changed?: () -> bool

    def provider_previous_change: () -> Array[String?]?

    def provider_previously_was: () -> String?

    def provider_before_last_save: () -> String?

    def provider_change_to_be_saved: () -> Array[String?]?

    def provider_in_database: () -> String?

    def saved_change_to_provider: () -> Array[String?]?

    def saved_change_to_provider?: () -> bool

    def will_save_change_to_provider?: () -> bool

    def restore_provider!: () -> void

    def clear_provider_change: () -> void

    def uid: () -> String

    def uid=: (String) -> String

    def uid?: () -> bool

    def uid_changed?: () -> bool

    def uid_change: () -> [ String?, String? ]

    def uid_will_change!: () -> void

    def uid_was: () -> String?

    def uid_previously_changed?: () -> bool

    def uid_previous_change: () -> Array[String?]?

    def uid_previously_was: () -> String?

    def uid_before_last_save: () -> String?

    def uid_change_to_be_saved: () -> Array[String?]?

    def uid_in_database: () -> String?

    def saved_change_to_uid: () -> Array[String?]?

    def saved_change_to_uid?: () -> bool

    def will_save_change_to_uid?: () -> bool

    def restore_uid!: () -> void

    def clear_uid_change: () -> void

    def encrypted_password: () -> String

    def encrypted_password=: (String) -> String

    def encrypted_password?: () -> bool

    def encrypted_password_changed?: () -> bool

    def encrypted_password_change: () -> [ String?, String? ]

    def encrypted_password_will_change!: () -> void

    def encrypted_password_was: () -> String?

    def encrypted_password_previously_changed?: () -> bool

    def encrypted_password_previous_change: () -> Array[String?]?

    def encrypted_password_previously_was: () -> String?

    def encrypted_password_before_last_save: () -> String?

    def encrypted_password_change_to_be_saved: () -> Array[String?]?

    def encrypted_password_in_database: () -> String?

    def saved_change_to_encrypted_password: () -> Array[String?]?

    def saved_change_to_encrypted_password?: () -> bool

    def will_save_change_to_encrypted_password?: () -> bool

    def restore_encrypted_password!: () -> void

    def clear_encrypted_password_change: () -> void

    def reset_password_token: () -> String?

    def reset_password_token=: (String?) -> String?

    def reset_password_token?: () -> bool

    def reset_password_token_changed?: () -> bool

    def reset_password_token_change: () -> [ String?, String? ]

    def reset_password_token_will_change!: () -> void

    def reset_password_token_was: () -> String?

    def reset_password_token_previously_changed?: () -> bool

    def reset_password_token_previous_change: () -> Array[String?]?

    def reset_password_token_previously_was: () -> String?

    def reset_password_token_before_last_save: () -> String?

    def reset_password_token_change_to_be_saved: () -> Array[String?]?

    def reset_password_token_in_database: () -> String?

    def saved_change_to_reset_password_token: () -> Array[String?]?

    def saved_change_to_reset_password_token?: () -> bool

    def will_save_change_to_reset_password_token?: () -> bool

    def restore_reset_password_token!: () -> void

    def clear_reset_password_token_change: () -> void

    def reset_password_sent_at: () -> ActiveSupport::TimeWithZone?

    def reset_password_sent_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def reset_password_sent_at?: () -> bool

    def reset_password_sent_at_changed?: () -> bool

    def reset_password_sent_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def reset_password_sent_at_will_change!: () -> void

    def reset_password_sent_at_was: () -> ActiveSupport::TimeWithZone?

    def reset_password_sent_at_previously_changed?: () -> bool

    def reset_password_sent_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def reset_password_sent_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def reset_password_sent_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def reset_password_sent_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def reset_password_sent_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_reset_password_sent_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_reset_password_sent_at?: () -> bool

    def will_save_change_to_reset_password_sent_at?: () -> bool

    def restore_reset_password_sent_at!: () -> void

    def clear_reset_password_sent_at_change: () -> void

    def allow_password_change: () -> bool?

    def allow_password_change=: (bool?) -> bool?

    def allow_password_change?: () -> bool

    def allow_password_change_changed?: () -> bool

    def allow_password_change_change: () -> [ bool?, bool? ]

    def allow_password_change_will_change!: () -> void

    def allow_password_change_was: () -> bool?

    def allow_password_change_previously_changed?: () -> bool

    def allow_password_change_previous_change: () -> Array[bool?]?

    def allow_password_change_previously_was: () -> bool?

    def allow_password_change_before_last_save: () -> bool?

    def allow_password_change_change_to_be_saved: () -> Array[bool?]?

    def allow_password_change_in_database: () -> bool?

    def saved_change_to_allow_password_change: () -> Array[bool?]?

    def saved_change_to_allow_password_change?: () -> bool

    def will_save_change_to_allow_password_change?: () -> bool

    def restore_allow_password_change!: () -> void

    def clear_allow_password_change_change: () -> void

    def remember_created_at: () -> ActiveSupport::TimeWithZone?

    def remember_created_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def remember_created_at?: () -> bool

    def remember_created_at_changed?: () -> bool

    def remember_created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def remember_created_at_will_change!: () -> void

    def remember_created_at_was: () -> ActiveSupport::TimeWithZone?

    def remember_created_at_previously_changed?: () -> bool

    def remember_created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def remember_created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def remember_created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def remember_created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def remember_created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_remember_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_remember_created_at?: () -> bool

    def will_save_change_to_remember_created_at?: () -> bool

    def restore_remember_created_at!: () -> void

    def clear_remember_created_at_change: () -> void

    def confirmation_token: () -> String?

    def confirmation_token=: (String?) -> String?

    def confirmation_token?: () -> bool

    def confirmation_token_changed?: () -> bool

    def confirmation_token_change: () -> [ String?, String? ]

    def confirmation_token_will_change!: () -> void

    def confirmation_token_was: () -> String?

    def confirmation_token_previously_changed?: () -> bool

    def confirmation_token_previous_change: () -> Array[String?]?

    def confirmation_token_previously_was: () -> String?

    def confirmation_token_before_last_save: () -> String?

    def confirmation_token_change_to_be_saved: () -> Array[String?]?

    def confirmation_token_in_database: () -> String?

    def saved_change_to_confirmation_token: () -> Array[String?]?

    def saved_change_to_confirmation_token?: () -> bool

    def will_save_change_to_confirmation_token?: () -> bool

    def restore_confirmation_token!: () -> void

    def clear_confirmation_token_change: () -> void

    def confirmed_at: () -> ActiveSupport::TimeWithZone?

    def confirmed_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def confirmed_at?: () -> bool

    def confirmed_at_changed?: () -> bool

    def confirmed_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def confirmed_at_will_change!: () -> void

    def confirmed_at_was: () -> ActiveSupport::TimeWithZone?

    def confirmed_at_previously_changed?: () -> bool

    def confirmed_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def confirmed_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def confirmed_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def confirmed_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def confirmed_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_confirmed_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_confirmed_at?: () -> bool

    def will_save_change_to_confirmed_at?: () -> bool

    def restore_confirmed_at!: () -> void

    def clear_confirmed_at_change: () -> void

    def confirmation_sent_at: () -> ActiveSupport::TimeWithZone?

    def confirmation_sent_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def confirmation_sent_at?: () -> bool

    def confirmation_sent_at_changed?: () -> bool

    def confirmation_sent_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def confirmation_sent_at_will_change!: () -> void

    def confirmation_sent_at_was: () -> ActiveSupport::TimeWithZone?

    def confirmation_sent_at_previously_changed?: () -> bool

    def confirmation_sent_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def confirmation_sent_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def confirmation_sent_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def confirmation_sent_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def confirmation_sent_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_confirmation_sent_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_confirmation_sent_at?: () -> bool

    def will_save_change_to_confirmation_sent_at?: () -> bool

    def restore_confirmation_sent_at!: () -> void

    def clear_confirmation_sent_at_change: () -> void

    def unconfirmed_email: () -> String?

    def unconfirmed_email=: (String?) -> String?

    def unconfirmed_email?: () -> bool

    def unconfirmed_email_changed?: () -> bool

    def unconfirmed_email_change: () -> [ String?, String? ]

    def unconfirmed_email_will_change!: () -> void

    def unconfirmed_email_was: () -> String?

    def unconfirmed_email_previously_changed?: () -> bool

    def unconfirmed_email_previous_change: () -> Array[String?]?

    def unconfirmed_email_previously_was: () -> String?

    def unconfirmed_email_before_last_save: () -> String?

    def unconfirmed_email_change_to_be_saved: () -> Array[String?]?

    def unconfirmed_email_in_database: () -> String?

    def saved_change_to_unconfirmed_email: () -> Array[String?]?

    def saved_change_to_unconfirmed_email?: () -> bool

    def will_save_change_to_unconfirmed_email?: () -> bool

    def restore_unconfirmed_email!: () -> void

    def clear_unconfirmed_email_change: () -> void

    def name: () -> String?

    def name=: (String?) -> String?

    def name?: () -> bool

    def name_changed?: () -> bool

    def name_change: () -> [ String?, String? ]

    def name_will_change!: () -> void

    def name_was: () -> String?

    def name_previously_changed?: () -> bool

    def name_previous_change: () -> Array[String?]?

    def name_previously_was: () -> String?

    def name_before_last_save: () -> String?

    def name_change_to_be_saved: () -> Array[String?]?

    def name_in_database: () -> String?

    def saved_change_to_name: () -> Array[String?]?

    def saved_change_to_name?: () -> bool

    def will_save_change_to_name?: () -> bool

    def restore_name!: () -> void

    def clear_name_change: () -> void

    def nickname: () -> String?

    def nickname=: (String?) -> String?

    def nickname?: () -> bool

    def nickname_changed?: () -> bool

    def nickname_change: () -> [ String?, String? ]

    def nickname_will_change!: () -> void

    def nickname_was: () -> String?

    def nickname_previously_changed?: () -> bool

    def nickname_previous_change: () -> Array[String?]?

    def nickname_previously_was: () -> String?

    def nickname_before_last_save: () -> String?

    def nickname_change_to_be_saved: () -> Array[String?]?

    def nickname_in_database: () -> String?

    def saved_change_to_nickname: () -> Array[String?]?

    def saved_change_to_nickname?: () -> bool

    def will_save_change_to_nickname?: () -> bool

    def restore_nickname!: () -> void

    def clear_nickname_change: () -> void

    def image: () -> String?

    def image=: (String?) -> String?

    def image?: () -> bool

    def image_changed?: () -> bool

    def image_change: () -> [ String?, String? ]

    def image_will_change!: () -> void

    def image_was: () -> String?

    def image_previously_changed?: () -> bool

    def image_previous_change: () -> Array[String?]?

    def image_previously_was: () -> String?

    def image_before_last_save: () -> String?

    def image_change_to_be_saved: () -> Array[String?]?

    def image_in_database: () -> String?

    def saved_change_to_image: () -> Array[String?]?

    def saved_change_to_image?: () -> bool

    def will_save_change_to_image?: () -> bool

    def restore_image!: () -> void

    def clear_image_change: () -> void

    def email: () -> String?

    def email=: (String?) -> String?

    def email?: () -> bool

    def email_changed?: () -> bool

    def email_change: () -> [ String?, String? ]

    def email_will_change!: () -> void

    def email_was: () -> String?

    def email_previously_changed?: () -> bool

    def email_previous_change: () -> Array[String?]?

    def email_previously_was: () -> String?

    def email_before_last_save: () -> String?

    def email_change_to_be_saved: () -> Array[String?]?

    def email_in_database: () -> String?

    def saved_change_to_email: () -> Array[String?]?

    def saved_change_to_email?: () -> bool

    def will_save_change_to_email?: () -> bool

    def restore_email!: () -> void

    def clear_email_change: () -> void

    def tokens: () -> String?

    def tokens=: (String?) -> String?

    def tokens?: () -> bool

    def tokens_changed?: () -> bool

    def tokens_change: () -> [ String?, String? ]

    def tokens_will_change!: () -> void

    def tokens_was: () -> String?

    def tokens_previously_changed?: () -> bool

    def tokens_previous_change: () -> Array[String?]?

    def tokens_previously_was: () -> String?

    def tokens_before_last_save: () -> String?

    def tokens_change_to_be_saved: () -> Array[String?]?

    def tokens_in_database: () -> String?

    def saved_change_to_tokens: () -> Array[String?]?

    def saved_change_to_tokens?: () -> bool

    def will_save_change_to_tokens?: () -> bool

    def restore_tokens!: () -> void

    def clear_tokens_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[User, Integer]
    include Enumerable[User]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[User, Integer]
  end
end
