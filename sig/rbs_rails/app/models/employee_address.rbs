class EmployeeAddress < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[EmployeeAddress, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def company_id: () -> Integer

    def company_id=: (Integer) -> Integer

    def company_id?: () -> bool

    def company_id_changed?: () -> bool

    def company_id_change: () -> [ Integer?, Integer? ]

    def company_id_will_change!: () -> void

    def company_id_was: () -> Integer?

    def company_id_previously_changed?: () -> bool

    def company_id_previous_change: () -> Array[Integer?]?

    def company_id_previously_was: () -> Integer?

    def company_id_before_last_save: () -> Integer?

    def company_id_change_to_be_saved: () -> Array[Integer?]?

    def company_id_in_database: () -> Integer?

    def saved_change_to_company_id: () -> Array[Integer?]?

    def saved_change_to_company_id?: () -> bool

    def will_save_change_to_company_id?: () -> bool

    def restore_company_id!: () -> void

    def clear_company_id_change: () -> void

    def employee_id: () -> Integer

    def employee_id=: (Integer) -> Integer

    def employee_id?: () -> bool

    def employee_id_changed?: () -> bool

    def employee_id_change: () -> [ Integer?, Integer? ]

    def employee_id_will_change!: () -> void

    def employee_id_was: () -> Integer?

    def employee_id_previously_changed?: () -> bool

    def employee_id_previous_change: () -> Array[Integer?]?

    def employee_id_previously_was: () -> Integer?

    def employee_id_before_last_save: () -> Integer?

    def employee_id_change_to_be_saved: () -> Array[Integer?]?

    def employee_id_in_database: () -> Integer?

    def saved_change_to_employee_id: () -> Array[Integer?]?

    def saved_change_to_employee_id?: () -> bool

    def will_save_change_to_employee_id?: () -> bool

    def restore_employee_id!: () -> void

    def clear_employee_id_change: () -> void

    def post_code1: () -> String?

    def post_code1=: (String?) -> String?

    def post_code1?: () -> bool

    def post_code1_changed?: () -> bool

    def post_code1_change: () -> [ String?, String? ]

    def post_code1_will_change!: () -> void

    def post_code1_was: () -> String?

    def post_code1_previously_changed?: () -> bool

    def post_code1_previous_change: () -> Array[String?]?

    def post_code1_previously_was: () -> String?

    def post_code1_before_last_save: () -> String?

    def post_code1_change_to_be_saved: () -> Array[String?]?

    def post_code1_in_database: () -> String?

    def saved_change_to_post_code1: () -> Array[String?]?

    def saved_change_to_post_code1?: () -> bool

    def will_save_change_to_post_code1?: () -> bool

    def restore_post_code1!: () -> void

    def clear_post_code1_change: () -> void

    def post_code2: () -> String?

    def post_code2=: (String?) -> String?

    def post_code2?: () -> bool

    def post_code2_changed?: () -> bool

    def post_code2_change: () -> [ String?, String? ]

    def post_code2_will_change!: () -> void

    def post_code2_was: () -> String?

    def post_code2_previously_changed?: () -> bool

    def post_code2_previous_change: () -> Array[String?]?

    def post_code2_previously_was: () -> String?

    def post_code2_before_last_save: () -> String?

    def post_code2_change_to_be_saved: () -> Array[String?]?

    def post_code2_in_database: () -> String?

    def saved_change_to_post_code2: () -> Array[String?]?

    def saved_change_to_post_code2?: () -> bool

    def will_save_change_to_post_code2?: () -> bool

    def restore_post_code2!: () -> void

    def clear_post_code2_change: () -> void

    def prefecture_id: () -> Integer?

    def prefecture_id=: (Integer?) -> Integer?

    def prefecture_id?: () -> bool

    def prefecture_id_changed?: () -> bool

    def prefecture_id_change: () -> [ Integer?, Integer? ]

    def prefecture_id_will_change!: () -> void

    def prefecture_id_was: () -> Integer?

    def prefecture_id_previously_changed?: () -> bool

    def prefecture_id_previous_change: () -> Array[Integer?]?

    def prefecture_id_previously_was: () -> Integer?

    def prefecture_id_before_last_save: () -> Integer?

    def prefecture_id_change_to_be_saved: () -> Array[Integer?]?

    def prefecture_id_in_database: () -> Integer?

    def saved_change_to_prefecture_id: () -> Array[Integer?]?

    def saved_change_to_prefecture_id?: () -> bool

    def will_save_change_to_prefecture_id?: () -> bool

    def restore_prefecture_id!: () -> void

    def clear_prefecture_id_change: () -> void

    def address: () -> String?

    def address=: (String?) -> String?

    def address?: () -> bool

    def address_changed?: () -> bool

    def address_change: () -> [ String?, String? ]

    def address_will_change!: () -> void

    def address_was: () -> String?

    def address_previously_changed?: () -> bool

    def address_previous_change: () -> Array[String?]?

    def address_previously_was: () -> String?

    def address_before_last_save: () -> String?

    def address_change_to_be_saved: () -> Array[String?]?

    def address_in_database: () -> String?

    def saved_change_to_address: () -> Array[String?]?

    def saved_change_to_address?: () -> bool

    def will_save_change_to_address?: () -> bool

    def restore_address!: () -> void

    def clear_address_change: () -> void

    def building: () -> String?

    def building=: (String?) -> String?

    def building?: () -> bool

    def building_changed?: () -> bool

    def building_change: () -> [ String?, String? ]

    def building_will_change!: () -> void

    def building_was: () -> String?

    def building_previously_changed?: () -> bool

    def building_previous_change: () -> Array[String?]?

    def building_previously_was: () -> String?

    def building_before_last_save: () -> String?

    def building_change_to_be_saved: () -> Array[String?]?

    def building_in_database: () -> String?

    def saved_change_to_building: () -> Array[String?]?

    def saved_change_to_building?: () -> bool

    def will_save_change_to_building?: () -> bool

    def restore_building!: () -> void

    def clear_building_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def company: () -> Company
  def company=: (Company?) -> Company?
  def reload_company: () -> Company?
  def build_company: (untyped) -> Company
  def create_company: (untyped) -> Company
  def create_company!: (untyped) -> Company
  def employee: () -> Employee
  def employee=: (Employee?) -> Employee?
  def reload_employee: () -> Employee?
  def build_employee: (untyped) -> Employee
  def create_employee: (untyped) -> Employee
  def create_employee!: (untyped) -> Employee
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmployeeAddress, Integer]
    include Enumerable[EmployeeAddress]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmployeeAddress, Integer]
  end
end
