class EmployeeSalaryAttendanceItem < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[EmployeeSalaryAttendanceItem, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def company_id: () -> Integer

    def company_id=: (Integer) -> Integer

    def company_id?: () -> bool

    def company_id_changed?: () -> bool

    def company_id_change: () -> [ Integer?, Integer? ]

    def company_id_will_change!: () -> void

    def company_id_was: () -> Integer?

    def company_id_previously_changed?: () -> bool

    def company_id_previous_change: () -> Array[Integer?]?

    def company_id_previously_was: () -> Integer?

    def company_id_before_last_save: () -> Integer?

    def company_id_change_to_be_saved: () -> Array[Integer?]?

    def company_id_in_database: () -> Integer?

    def saved_change_to_company_id: () -> Array[Integer?]?

    def saved_change_to_company_id?: () -> bool

    def will_save_change_to_company_id?: () -> bool

    def restore_company_id!: () -> void

    def clear_company_id_change: () -> void

    def employee_salary_id: () -> Integer

    def employee_salary_id=: (Integer) -> Integer

    def employee_salary_id?: () -> bool

    def employee_salary_id_changed?: () -> bool

    def employee_salary_id_change: () -> [ Integer?, Integer? ]

    def employee_salary_id_will_change!: () -> void

    def employee_salary_id_was: () -> Integer?

    def employee_salary_id_previously_changed?: () -> bool

    def employee_salary_id_previous_change: () -> Array[Integer?]?

    def employee_salary_id_previously_was: () -> Integer?

    def employee_salary_id_before_last_save: () -> Integer?

    def employee_salary_id_change_to_be_saved: () -> Array[Integer?]?

    def employee_salary_id_in_database: () -> Integer?

    def saved_change_to_employee_salary_id: () -> Array[Integer?]?

    def saved_change_to_employee_salary_id?: () -> bool

    def will_save_change_to_employee_salary_id?: () -> bool

    def restore_employee_salary_id!: () -> void

    def clear_employee_salary_id_change: () -> void

    def attendance_item_id: () -> Integer

    def attendance_item_id=: (Integer) -> Integer

    def attendance_item_id?: () -> bool

    def attendance_item_id_changed?: () -> bool

    def attendance_item_id_change: () -> [ Integer?, Integer? ]

    def attendance_item_id_will_change!: () -> void

    def attendance_item_id_was: () -> Integer?

    def attendance_item_id_previously_changed?: () -> bool

    def attendance_item_id_previous_change: () -> Array[Integer?]?

    def attendance_item_id_previously_was: () -> Integer?

    def attendance_item_id_before_last_save: () -> Integer?

    def attendance_item_id_change_to_be_saved: () -> Array[Integer?]?

    def attendance_item_id_in_database: () -> Integer?

    def saved_change_to_attendance_item_id: () -> Array[Integer?]?

    def saved_change_to_attendance_item_id?: () -> bool

    def will_save_change_to_attendance_item_id?: () -> bool

    def restore_attendance_item_id!: () -> void

    def clear_attendance_item_id_change: () -> void

    def row_no: () -> Integer

    def row_no=: (Integer) -> Integer

    def row_no?: () -> bool

    def row_no_changed?: () -> bool

    def row_no_change: () -> [ Integer?, Integer? ]

    def row_no_will_change!: () -> void

    def row_no_was: () -> Integer?

    def row_no_previously_changed?: () -> bool

    def row_no_previous_change: () -> Array[Integer?]?

    def row_no_previously_was: () -> Integer?

    def row_no_before_last_save: () -> Integer?

    def row_no_change_to_be_saved: () -> Array[Integer?]?

    def row_no_in_database: () -> Integer?

    def saved_change_to_row_no: () -> Array[Integer?]?

    def saved_change_to_row_no?: () -> bool

    def will_save_change_to_row_no?: () -> bool

    def restore_row_no!: () -> void

    def clear_row_no_change: () -> void

    def name: () -> String

    def name=: (String) -> String

    def name?: () -> bool

    def name_changed?: () -> bool

    def name_change: () -> [ String?, String? ]

    def name_will_change!: () -> void

    def name_was: () -> String?

    def name_previously_changed?: () -> bool

    def name_previous_change: () -> Array[String?]?

    def name_previously_was: () -> String?

    def name_before_last_save: () -> String?

    def name_change_to_be_saved: () -> Array[String?]?

    def name_in_database: () -> String?

    def saved_change_to_name: () -> Array[String?]?

    def saved_change_to_name?: () -> bool

    def will_save_change_to_name?: () -> bool

    def restore_name!: () -> void

    def clear_name_change: () -> void

    def value: () -> String

    def value=: (String) -> String

    def value?: () -> bool

    def value_changed?: () -> bool

    def value_change: () -> [ String?, String? ]

    def value_will_change!: () -> void

    def value_was: () -> String?

    def value_previously_changed?: () -> bool

    def value_previous_change: () -> Array[String?]?

    def value_previously_was: () -> String?

    def value_before_last_save: () -> String?

    def value_change_to_be_saved: () -> Array[String?]?

    def value_in_database: () -> String?

    def saved_change_to_value: () -> Array[String?]?

    def saved_change_to_value?: () -> bool

    def will_save_change_to_value?: () -> bool

    def restore_value!: () -> void

    def clear_value_change: () -> void

    def is_delete: () -> bool

    def is_delete=: (bool) -> bool

    def is_delete?: () -> bool

    def is_delete_changed?: () -> bool

    def is_delete_change: () -> [ bool?, bool? ]

    def is_delete_will_change!: () -> void

    def is_delete_was: () -> bool?

    def is_delete_previously_changed?: () -> bool

    def is_delete_previous_change: () -> Array[bool?]?

    def is_delete_previously_was: () -> bool?

    def is_delete_before_last_save: () -> bool?

    def is_delete_change_to_be_saved: () -> Array[bool?]?

    def is_delete_in_database: () -> bool?

    def saved_change_to_is_delete: () -> Array[bool?]?

    def saved_change_to_is_delete?: () -> bool

    def will_save_change_to_is_delete?: () -> bool

    def restore_is_delete!: () -> void

    def clear_is_delete_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def company: () -> Company
  def company=: (Company?) -> Company?
  def reload_company: () -> Company?
  def build_company: (untyped) -> Company
  def create_company: (untyped) -> Company
  def create_company!: (untyped) -> Company
  def employee_salary: () -> EmployeeSalary
  def employee_salary=: (EmployeeSalary?) -> EmployeeSalary?
  def reload_employee_salary: () -> EmployeeSalary?
  def build_employee_salary: (untyped) -> EmployeeSalary
  def create_employee_salary: (untyped) -> EmployeeSalary
  def create_employee_salary!: (untyped) -> EmployeeSalary
  def attendance_item: () -> AttendanceItem
  def attendance_item=: (AttendanceItem?) -> AttendanceItem?
  def reload_attendance_item: () -> AttendanceItem?
  def build_attendance_item: (untyped) -> AttendanceItem
  def create_attendance_item: (untyped) -> AttendanceItem
  def create_attendance_item!: (untyped) -> AttendanceItem
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmployeeSalaryAttendanceItem, Integer]
    include Enumerable[EmployeeSalaryAttendanceItem]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmployeeSalaryAttendanceItem, Integer]
  end
end
